---
// Define props for title and description
export interface Props {
  title?: string;
  description?: string;
}
import styles from "Styles/global.css?url";
import Aside from "Components/Aside.astro";
import appleTouchIcon from "Images/favicons/apple-touch-icon.png?url";
import favicon32 from "Images/favicons/favicon-32x32.png?url";
import favicon16 from "Images/favicons/favicon-16x16.png?url";
import safariPinned from "Images/favicons/safari-pinned-tab.svg?url";
import favicon from "Images/favicons/favicon.ico?url";
import { getRelativeLocaleUrl } from 'astro:i18n';
import { defaultLocale } from '../i18n';
import Svg from "Components/Svg.astro";

const {
  title = "Your Default Title",
  description = "Your Default Description",
} = Astro.props;
const { lang, header } = Astro.locals;

// Lista de idiomas disponibles
const languages = Object.entries(header.supported_languages || {}).map(
  ([code, name]) => ({
    code,
    name,
  }),
);

const { currentLocale = 'en' } = Astro;

let currentPath = Astro.url.pathname;
if (currentLocale !== defaultLocale) {
  currentPath = currentPath.replace(`/${currentLocale}`, "");
}

// Favicons paths
const favicons = {
  appleTouch: appleTouchIcon,
  favicon32,
  favicon16,
  safariPinned,
  favicon
};
---

<!doctype html>
<html class="h-full bg-gray-50" lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Facebook Domain Verification -->
    <meta name="facebook-domain-verification"
    content="dtpasml1jzf93d810gay7p0ur06cdg"/>
    <!-- Google Site Verification -->
    <meta name="google-site-verification"
        content="jFieajwhO9cK2yw5-HxVmZvmmlSxaUzHHkAaup9sJsw"/>
    <meta name="google-site-verification"
        content="gjwJy8yLE7542hS1mShvo1ELXkNNpLPzGrRSt-5Tgjc" />
    <meta name="google-site-verification"
        content="ad8UWxheq1O6ysqyIBfAZIgqrpZ_MUqxsFz8GVavCwM" />

    <!-- Favicons -->
    <link rel="apple-touch-icon" sizes="180x180" href={favicons.appleTouch}>
    <link rel="icon" type="image/png" sizes="32x32" href={favicons.favicon32}>
    <link rel="icon" type="image/png" sizes="16x16" href={favicons.favicon16}>
    <link rel="mask-icon" href={favicons.safariPinned} color="#4b4bbe">
    <link rel="shortcut icon" href={favicons.favicon}>

    <meta name="msapplication-TileColor" content="#4b4bbe">
    <meta name="theme-color" content="#4b4bbe">

    <link rel="stylesheet" href={styles} />

    <slot name="head" />

  </head>
  <body class="h-full">
    <div x-data="{ isOpen: false }">
      <div class="relative z-50 lg:hidden" role="dialog" aria-modal="true">
        <div
          x-show="isOpen"
          x-transition:enter="transition-opacity ease-linear duration-300"
          x-transition:enter-start="opacity-0"
          x-transition:enter-end="opacity-100"
          x-transition:leave="transition-opacity ease-linear duration-300"
          x-transition:leave-start="opacity-100"
          x-transition:leave-end="opacity-0"
          class="fixed inset-0 bg-gray-900/80"
        >
        </div>

        <div x-show="isOpen" class="fixed inset-0 flex">
          <div
            x-show="isOpen"
            x-transition:enter="transition ease-in-out duration-300 transform"
            x-transition:enter-start="-translate-x-full"
            x-transition:enter-end="translate-x-0"
            x-transition:leave="transition ease-in-out duration-300 transform"
            x-transition:leave-start="translate-x-0"
            x-transition:leave-end="-translate-x-full"
            class="relative mr-16 flex w-full max-w-xs flex-1"
          >
            <div
              x-show="isOpen"
              x-transition:enter="ease-in-out duration-300"
              x-transition:enter-start="opacity-0"
              x-transition:enter-end="opacity-100"
              x-transition:leave="ease-in-out duration-300"
              x-transition:leave-start="opacity-100"
              x-transition:leave-end="opacity-0"
              class="absolute left-full top-0 flex w-16 justify-center pt-5"
            >
              <button
                type="button"
                @click="isOpen = false"
                class="-m-2.5 p-2.5"
              >
                <span class="sr-only">{header.close_sidebar}</span>
                <Svg src="x-mark" class="h-6 w-6 text-white" />
              </button>
            </div>

            <div
              class="flex grow flex-col gap-y-5 overflow-y-auto bg-white px-6 pb-4"
            >
              <Aside />
            </div>
          </div>
        </div>
      </div>

      <div
        class="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-[20rem] lg:flex-col"
      >
        <div
          class="flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-white px-2 pb-4"
        >
          <Aside />
        </div>
      </div>

      <div class="lg:pl-[20rem] bg-gray-50">
        <div
          class="sticky top-0 z-40 lg:mx-auto lg:px-8 bg-white border-b border-gray-200"
        >
          <div
            class="flex h-16 items-center gap-x-4 px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-0 lg:shadow-none"
          >
            <button
              type="button"
              @click="isOpen = true"
              class="-m-2.5 p-2.5 text-gray-700 lg:hidden"
            >
              <span class="sr-only">{header.open_sidebar}</span>
              <Svg src="bars-3" class="h-6 w-6" />
            </button>

            <div class="h-6 w-px bg-gray-200 lg:hidden" aria-hidden="true">
            </div>

            <div class="flex flex-1 gap-x-4 self-stretch lg:gap-x-6">
              <form class="relative flex flex-1" action="#" method="GET"></form>

              <div class="flex items-center gap-x-4 lg:gap-x-6">
                <div
                  class="relative"
                  x-cloak
                  x-data="{ languageIsOpen: false }"
                  @click.away="languageIsOpen = false"
                >
                  <button
                    type="button"
                    @click="languageIsOpen =!languageIsOpen"
                    class="p-2.5 text-sm font-semibold leading-6 text-gray-900"
                  >
                    <div class="lg:hidden text-gray-400 hover:text-gray-500">
                      <Svg src="flag" class="w-6 h-6" />
                    </div>

                    <div class="hidden lg:flex lg:items-center">
                      <span>{header.language}</span>
                      <Svg src="chevron-down" class="ml-2 h-5 w-5 text-gray-400" />
                    </div>
                  </button>

                  <div
                    x-show="languageIsOpen"
                    x-transition:enter="transition ease-out duration-100"
                    x-transition:enter-start="transform opacity-0 scale-95"
                    x-transition:enter-end="transform opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-75"
                    x-transition:leave-start="transform opacity-100 scale-100"
                    x-transition:leave-end="transform opacity-0 scale-95"
                    class="absolute right-0 z-50 mt-2.5 w-40 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none"
                    role="menu"
                    aria-orientation="vertical"
                    aria-labelledby="user-menu-button"
                    tabindex="-1"
                  >
                    {
                      languages.map(({ code, name }) => (
                        <a
                          href={getRelativeLocaleUrl(code, currentPath)}
                          role="menuitem"
                          tabindex="-1"
                          id={`user-menu-item-${code}`}
                          class:list={[
                            "block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50",
                            {
                              "bg-gray-50": code === lang,
                            },
                          ]}
                        >
                          {name}
                        </a>
                      ))
                    }
                  </div>
                </div>

                <div
                  class="hidden lg:block lg:h-6 lg:w-px lg:bg-gray-200"
                  aria-hidden="true"
                >
                </div>

                <a
                  href="/login"
                  class="text-sm font-semibold leading-6 text-gray-900 hover:text-indigo-600"
                  aria-hidden="true"
                >
                  {header.sign_in}
                </a>
              </div>
            </div>
          </div>
        </div>

        <main class="py-5">
          <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <slot />
          </div>
        </main>
      </div>
    </div>
    <script>import 'Scripts/bootstrap.js';</script>
    <slot name="foot" />
</body>
</html>
