---
export interface Props {
  href: string;
  title: string;
  icon: string; // SVG completo como string
  isFree?: boolean;
  iconClass?: string;
  rounded?: boolean;
}

import { getRelativeLocaleUrl } from 'astro:i18n';

import Svg from "./Svg.astro";
const { main } = Astro.locals;
const { currentLocale = 'en' } = Astro;

const { href, title, icon, isFree = false, rounded = true } = Astro.props;
const path = getRelativeLocaleUrl(currentLocale, href)
const currentPath = Astro.url.pathname
const isActive = currentPath === path
---
<a
  
    href={path}
    title={title}
    class={`${isActive ? 'bg-gray-50 text-indigo-600' : 'text-gray-700'} hover:text-indigo-600 hover:bg-gray-50 group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold`}
  >
  {rounded ? (
    <span
      class={`${isActive ? 'text-indigo-600 border-indigo-600' : 'text-gray-400 border-gray-200'} flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border text-[0.625rem] font-medium bg-white group-hover:border-indigo-600 group-hover:text-indigo-600`}
    >  
    <Svg src={icon} class="size-4" />
    </span>

    <span class="truncate">
      {title}
      {isFree && (
        <span class="px-1.5 py-0.5 text-xs rounded-xl td-bg-orange text-white">
          {main.free}
        </span>
      )}
    </span>

  ) : (
    <Svg src={icon} class="size-6 shrink-0 text-gray-400 group-hover:text-indigo-600" /> <Fragment>{title}</Fragment>
  )}
</a>

